version: '3.4'

services:
  mongo:
    image: "${REGISTRY_NAME}mongo:latest"
    volumes:
      - mongo_data:/data/db
    networks:
      - "internal"
    restart: "unless-stopped"

  elastic:
    image: "${REGISTRY_NAME}docker.elastic.co/elasticsearch/elasticsearch:7.10.2"
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
    ports:
      - 9200:9200 # Need to expose for frontend
    networks:
      - "internal"
    restart: "unless-stopped"

  crawler:
    build: 
      context: ./crawler
      dockerfile: Dockerfile
    image: "${REGISTRY_NAME}devclubiitd/haystack_crawler:0.1"
    restart: "unless-stopped"
    networks:
      - "internal"
      - "reverseproxy"
    env_file:
      - crawler/.env
    environment:
      - MONGODB_URI=mongo:27017
      - ELASTIC_URI=elastic:9200
    depends_on:
      - mongo
      - elastic

  frontend:
    build:
      context: ./search_frontend
      dockerfile: Dockerfile
    image: "${REGISTRY_NAME}devclubiitd/haystack_frontend:0.1"
    ports:
      - 3000:80
    restart: "unless-stopped" 
    networks:
      - "internal"
      - "reverseproxy"
    environment:
      - VIRTUAL_HOST
    depends_on: 
      - elastic

volumes:
  mongo_data:
  elastic_data:

networks:
  reverseproxy:
    external:
      name: "reverseproxy"
  internal: